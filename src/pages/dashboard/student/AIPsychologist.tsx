import { useEffect, useState } from "react";
import { Heart, Brain, Smile, Frown, Calendar, TrendingUp, MessageSquare, BookOpen, Activity, Target, Send, X, CheckCircle } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";

const StudentAIPsychologist = () => {
  useEffect(() => {
    document.title = "AI‚Äë–ø—Å–∏—Ö–æ–ª–æ–≥ ‚Äî –£—á–µ–Ω–∏–∫ | Ability School";
  }, []);

  const [currentMood, setCurrentMood] = useState("happy");
  const [moodHistory, setMoodHistory] = useState([
    { date: "–ü–Ω", mood: "happy", value: 8 },
    { date: "–í—Ç", mood: "neutral", value: 6 },
    { date: "–°—Ä", mood: "sad", value: 4 },
    { date: "–ß—Ç", mood: "happy", value: 9 },
    { date: "–ü—Ç", mood: "happy", value: 7 },
    { date: "–°–±", mood: "neutral", value: 5 },
    { date: "–í—Å", mood: "happy", value: 8 }
  ]);

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
  const [chatOpen, setChatOpen] = useState(false);
  const [chatMessages, setChatMessages] = useState([
    { 
      id: 1, 
      text: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à AI-–ø—Å–∏—Ö–æ–ª–æ–≥. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å –≤–∞—Å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã. –í—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –æ –ª—é–±—ã—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö - –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –≤ —à–∫–æ–ª–µ, —Å –¥—Ä—É–∑—å—è–º–∏, —Å–µ–º—å–µ–π, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–µ–º, —á—Ç–æ —É –≤–∞—Å –Ω–∞ –¥—É—à–µ. –Ø –±—É–¥—É —Ä—è–¥–æ–º –∏ –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Å–ø–æ—Å–æ–±—ã —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏. –ö–∞–∫ –¥–µ–ª–∞? –ß—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?", 
      sender: "ai", 
      timestamp: new Date() 
    }
  ]);
  const [newMessage, setNewMessage] = useState("");
  const [diaryOpen, setDiaryOpen] = useState(false);
  const [diaryEntry, setDiaryEntry] = useState("");
  const [relaxationOpen, setRelaxationOpen] = useState(false);
  const [currentRelaxation, setCurrentRelaxation] = useState(null);
  const [recommendations, setRecommendations] = useState([]);
  const [conversationContext, setConversationContext] = useState<string[]>([]);

  const activities = [
    { name: "–ú–µ–¥–∏—Ç–∞—Ü–∏—è", duration: "10 –º–∏–Ω", completed: true, icon: "üßò" },
    { name: "–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", duration: "5 –º–∏–Ω", completed: true, icon: "ü´Å" },
    { name: "–ü—Ä–æ–≥—É–ª–∫–∞", duration: "30 –º–∏–Ω", completed: false, icon: "üö∂" },
    { name: "–ß—Ç–µ–Ω–∏–µ", duration: "20 –º–∏–Ω", completed: false, icon: "üìñ" }
  ];

  const getMoodIcon = (mood: string) => {
    switch (mood) {
      case "happy": return "üòä";
      case "neutral": return "üòê";
      case "sad": return "üòî";
      default: return "üòä";
    }
  };

  const getMoodColor = (mood: string) => {
    switch (mood) {
      case "happy": return "text-green-600";
      case "neutral": return "text-yellow-600";
      case "sad": return "text-red-600";
      default: return "text-gray-600";
    }
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
  const handleMoodChange = (mood: string) => {
    setCurrentMood(mood);
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    const today = new Date().toLocaleDateString('ru-RU', { weekday: 'short' });
    const updatedHistory = moodHistory.map(day =>
      day.date === today ? { ...day, mood, value: mood === "happy" ? 8 : mood === "neutral" ? 6 : 4 } : day
    );
    setMoodHistory(updatedHistory);
  };

  const handleSendMessage = () => {
    if (!newMessage.trim()) return;

    const userMessage = {
      id: Date.now(),
      text: newMessage,
      sender: "user",
      timestamp: new Date()
    };

    setChatMessages(prev => [...prev, userMessage]);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    setConversationContext(prev => [...prev.slice(-4), newMessage.toLowerCase()]);
    
    setNewMessage("");

    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ AI
    setTimeout(() => {
      const aiResponse = {
        id: Date.now() + 1,
        text: generateAIResponse(newMessage),
        sender: "ai",
        timestamp: new Date()
      };
      setChatMessages(prev => [...prev, aiResponse]);
    }, 1000);
  };

  const generateAIResponse = (userMessage: string) => {
    const message = userMessage.toLowerCase();
    const context = conversationContext.join(' ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    if (context.includes('–±—É–ª–ª—è—Ç') || context.includes('–±—É–ª–ª–∏–Ω–≥')) {
      const followUpResponses = [
        "–Ø –ø–æ–º–Ω—é, —á—Ç–æ –≤—ã –≥–æ–≤–æ—Ä–∏–ª–∏ –æ –±—É–ª–ª–∏–Ω–≥–µ. –ö–∞–∫ –¥–µ–ª–∞ —Å–µ–π—á–∞—Å? –£–¥–∞–ª–æ—Å—å –ª–∏ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∫–µ–º-—Ç–æ –∏–∑ –≤–∑—Ä–æ—Å–ª—ã—Ö?",
        "–ú—ã –æ–±—Å—É–∂–¥–∞–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—é —Å –±—É–ª–ª–∏–Ω–≥–æ–º. –ï—Å—Ç—å –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è? –ö–∞–∫ –≤—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ?",
        "–ü–æ–º–Ω—é –Ω–∞—à—É –±–µ—Å–µ–¥—É –æ –±—É–ª–ª–∏–Ω–≥–µ. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–π—á–∞—Å? –°—Ç–∞–ª–æ –ª–∏ –ª—É—á—à–µ?",
        "–ú—ã –≥–æ–≤–æ—Ä–∏–ª–∏ –æ —Ç–æ–º, —á—Ç–æ –≤–∞—Å –æ–±–∏–∂–∞—é—Ç. –ö–∞–∫ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è —Å–∏—Ç—É–∞—Ü–∏—è? –ù—É–∂–Ω–∞ –ª–∏ –µ—â–µ –ø–æ–º–æ—â—å?"
      ];
      return followUpResponses[Math.floor(Math.random() * followUpResponses.length)];
    }
    
    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –±—É–ª–ª–∏–Ω–≥
    if (message.includes('–±—É–ª–ª—è—Ç') || message.includes('–±—É–ª–ª–∏–Ω–≥') || message.includes('—Ç—Ä–∞–≤–ª—è') || message.includes('–∏–∑–¥–µ–≤–∞—é—Ç—Å—è')) {
      const bullyingResponses = [
        "–Ø –ø–æ–Ω–∏–º–∞—é, –∫–∞–∫ —Ç—è–∂–µ–ª–æ –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å –±—É–ª–ª–∏–Ω–≥. –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –≤–∏–Ω–∞, –∏ –≤—ã –Ω–µ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç–µ —Ç–∞–∫–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫—Ç–æ –∏–º–µ–Ω–Ω–æ –∏ –∫–∞–∫ –≤–∞—Å –æ–±–∏–∂–∞–µ—Ç?",
        "–ë—É–ª–ª–∏–Ω–≥ - —ç—Ç–æ —Å–µ—Ä—å–µ–∑–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞, –∏ —è –≥–æ—Ä–∂—É—Å—å —Ç–µ–º, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –æ–± —ç—Ç–æ–º –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å. –ö—Ç–æ-—Ç–æ –∏–∑ –≤–∑—Ä–æ—Å–ª—ã—Ö –∑–Ω–∞–µ—Ç –æ —Å–∏—Ç—É–∞—Ü–∏–∏?",
        "–¢–æ, —á—Ç–æ —Å –≤–∞–º–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ. –í—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ï—Å—Ç—å –ª–∏ —É—á–∏—Ç–µ–ª—å –∏–ª–∏ –≤–∑—Ä–æ—Å–ª—ã–π, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ?",
        "–ë—É–ª–ª–∏–Ω–≥ –º–æ–∂–µ—Ç —Å–∏–ª—å–Ω–æ –≤–ª–∏—è—Ç—å –Ω–∞ —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É, –Ω–æ –ø–æ–º–Ω–∏—Ç–µ - –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ –≤–∞—Å, –∞ –≤ —Ç–µ—Ö, –∫—Ç–æ —Ç–∞–∫ –ø–æ—Å—Ç—É–ø–∞–µ—Ç. –ö–∞–∫ –¥–æ–ª–≥–æ —ç—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è?",
        "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å. –ë—É–ª–ª–∏–Ω–≥ - —ç—Ç–æ –Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º, –∫–∞–∫ –º–æ–∂–Ω–æ –∑–∞—â–∏—Ç–∏—Ç—å —Å–µ–±—è –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å."
      ];
      return bullyingResponses[Math.floor(Math.random() * bullyingResponses.length)];
    }
    
    // –û—Ç–≤–µ—Ç—ã –Ω–∞ —Ç—Ä–µ–≤–æ–≥—É –∏ —Å—Ç—Ä–µ—Å—Å
    if (message.includes('—Ç—Ä–µ–≤–æ–∂–Ω–æ') || message.includes('—Å—Ç—Ä–∞—à–Ω–æ') || message.includes('–≤–æ–ª–Ω—É—é—Å—å') || message.includes('–Ω–µ—Ä–≤–Ω–∏—á–∞—é')) {
      const anxietyResponses = [
        "–¢—Ä–µ–≤–æ–≥–∞ - —ç—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è. –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º —Ç–µ—Ö–Ω–∏–∫—É –¥—ã—Ö–∞–Ω–∏—è: –≤–¥–æ—Ö –Ω–∞ 4 —Å—á–µ—Ç–∞, –∑–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 4, –≤—ã–¥–æ—Ö –Ω–∞ 6. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç —É –≤–∞—Å —Ç—Ä–µ–≤–æ–≥—É?",
        "–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—Ä–µ–≤–æ–∂–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∑–≤–∞—Ç—å 5 –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤–∏–¥–∏—Ç–µ –≤–æ–∫—Ä—É–≥ —Å–µ–±—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∑–∞–∑–µ–º–ª–∏—Ç—å—Å—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –æ —á–µ–º –≤—ã –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç–µ?",
        "–¢—Ä–µ–≤–æ–≥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –∏–∑–Ω—É—Ä–∏—Ç–µ–ª—å–Ω–æ–π. –ï—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤–∞–º —É—Å–ø–æ–∫–æ–∏—Ç—å—Å—è? –ú–æ–∂–µ—Ç –±—ã—Ç—å, –º—É–∑—ã–∫–∞ –∏–ª–∏ –ø—Ä–æ–≥—É–ª–∫–∞?",
        "–í–∞—à–∏ —á—É–≤—Å—Ç–≤–∞ –æ–±–æ—Å–Ω–æ–≤–∞–Ω—ã. –¢—Ä–µ–≤–æ–≥–∞ - —ç—Ç–æ —Å–ø–æ—Å–æ–± –Ω–∞—à–µ–≥–æ —Ç–µ–ª–∞ –∑–∞—â–∏—Ç–∏—Ç—å –Ω–∞—Å. –î–∞–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–º —Å–ø–æ—Å–æ–±—ã —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –Ω–µ–π –≤–º–µ—Å—Ç–µ."
      ];
      return anxietyResponses[Math.floor(Math.random() * anxietyResponses.length)];
    }
    
    // –û—Ç–≤–µ—Ç—ã –Ω–∞ –≥—Ä—É—Å—Ç—å –∏ –¥–µ–ø—Ä–µ—Å—Å–∏—é
    if (message.includes('–≥—Ä—É—Å—Ç–Ω–æ') || message.includes('–ø–µ—á–∞–ª—å–Ω–æ') || message.includes('–ø–ª–æ—Ö–æ') || message.includes('–¥–µ–ø—Ä–µ—Å—Å–∏—è')) {
      const sadnessResponses = [
        "–ì—Ä—É—Å—Ç—å - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —ç–º–æ—Ü–∏—è, –∏ –≤–∞–∂–Ω–æ –µ–µ –ø—Ä–æ–∂–∏–≤–∞—Ç—å. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç? –ò–Ω–æ–≥–¥–∞ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç.",
        "–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Å–µ–π—á–∞—Å —Ç—è–∂–µ–ª–æ. –î–∞–∂–µ –≤ —Å–∞–º—ã–µ —Ç–µ–º–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –µ—Å—Ç—å –Ω–∞–¥–µ–∂–¥–∞. –ß—Ç–æ –æ–±—ã—á–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤–∞–º –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ?",
        "–ì—Ä—É—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –≥–ª—É–±–æ–∫–æ–π. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–∞–∫ –Ω–µ –∫–∞–∂–µ—Ç—Å—è. –ï—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç –≤–∞–º —Ä–∞–¥–æ—Å—Ç—å?",
        "–í–∞—à–∏ —á—É–≤—Å—Ç–≤–∞ –≤–∞–∂–Ω—ã. –ò–Ω–æ–≥–¥–∞ –Ω–∞–º –Ω—É–∂–Ω–æ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∂–∏—Ç—å –≥—Ä—É—Å—Ç—å. –ö–∞–∫ –¥–æ–ª–≥–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è —Ç–∞–∫?"
      ];
      return sadnessResponses[Math.floor(Math.random() * sadnessResponses.length)];
    }
    
    // –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥—Ä—É–∑—å—è–º–∏
    if (message.includes('–¥—Ä—É–∑—å—è') || message.includes('–¥—Ä—É–≥') || message.includes('—Å—Å–æ—Ä–∞') || message.includes('–∫–æ–Ω—Ñ–ª–∏–∫—Ç')) {
      const friendshipResponses = [
        "–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å –¥—Ä—É–∑—å—è–º–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–º–∏. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ? –ò–Ω–æ–≥–¥–∞ –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–º.",
        "–î—Ä—É–∂–±–∞ - —ç—Ç–æ –≤–∞–∂–Ω–æ, –Ω–æ –∏–Ω–æ–≥–¥–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω—ã–º–∏. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç –≤ –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å –¥—Ä—É–∑—å—è–º–∏?",
        "–ü–æ—Ç–µ—Ä—è –¥—Ä—É–≥–∞ –∏–ª–∏ —Å—Å–æ—Ä–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ–π. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—è –¥—Ä—É–∂–±–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –≤–∑–∞–∏–º–Ω–æ–º —É–≤–∞–∂–µ–Ω–∏–∏. –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?",
        "–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –¥—Ä—É–∂–±–µ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –≤–∞–∂–Ω–æ –∏—Ö —Ä–µ—à–∞—Ç—å. –ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –¥—Ä—É–≥–æ–º –æ —Ç–æ–º, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?"
      ];
      return friendshipResponses[Math.floor(Math.random() * friendshipResponses.length)];
    }
    
    // –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ–º—å–µ–π
    if (message.includes('—Ä–æ–¥–∏—Ç–µ–ª–∏') || message.includes('–º–∞–º–∞') || message.includes('–ø–∞–ø–∞') || message.includes('—Å–µ–º—å—è')) {
      const familyResponses = [
        "–°–µ–º–µ–π–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω—ã–º–∏. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ–º–∞? –ò–Ω–æ–≥–¥–∞ —Ä–æ–¥–∏—Ç–µ–ª–∏ –Ω–µ –ø–æ–Ω–∏–º–∞—é—Ç, —á—Ç–æ –º—ã —á—É–≤—Å—Ç–≤—É–µ–º.",
        "–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —Å–µ–º–µ–π–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –º–æ–≥—É—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–º–∏. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å —Å–µ–º—å–µ–π?",
        "–°–µ–º—å—è - —ç—Ç–æ –≤–∞–∂–Ω–æ, –Ω–æ –∏–Ω–æ–≥–¥–∞ —Ç–∞–º –º–æ–≥—É—Ç –±—ã—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤–∞—à–∏ —á—É–≤—Å—Ç–≤–∞ –≤–∞–∂–Ω—ã. –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?",
        "–†–æ–¥–∏—Ç–µ–ª–∏ –∏–Ω–æ–≥–¥–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é—Ç –Ω–∞—Å, –Ω–æ —ç—Ç–æ –Ω–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –æ–Ω–∏ –Ω–∞—Å –Ω–µ –ª—é–±—è—Ç. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –≤ —á–µ–º –ø—Ä–æ–±–ª–µ–º–∞?"
      ];
      return familyResponses[Math.floor(Math.random() * familyResponses.length)];
    }
    
    // –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã –≤ —à–∫–æ–ª–µ
    if (message.includes('—à–∫–æ–ª–∞') || message.includes('—É—á–∏—Ç–µ–ª—å') || message.includes('—É—Ä–æ–∫') || message.includes('–æ—Ü–µ–Ω–∫–∏')) {
      const schoolResponses = [
        "–®–∫–æ–ª–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–µ—Å—Å–æ–≤—ã–º –º–µ—Å—Ç–æ–º. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç? –£—á–µ–±–∞, –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å —É—á–∏—Ç–µ–ª—è–º–∏ –∏–ª–∏ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞–º–∏?",
        "–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —à–∫–æ–ª–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–æ–π. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç? –ò–Ω–æ–≥–¥–∞ –ø—Ä–æ–±–ª–µ–º—ã –≤ —à–∫–æ–ª–µ –≤–ª–∏—è—é—Ç –Ω–∞ –Ω–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.",
        "–®–∫–æ–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –º–æ–≥—É—Ç –∫–∞–∑–∞—Ç—å—Å—è –Ω–µ–ø—Ä–µ–æ–¥–æ–ª–∏–º—ã–º–∏, –Ω–æ –º—ã –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏—è. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?",
        "–£—á–µ–±–∞ –∏ —à–∫–æ–ª–∞ - —ç—Ç–æ –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –∂–∏–∑–Ω–∏, –Ω–æ –Ω–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è. –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —á—Ç–æ –≤–∞—Å —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç?"
      ];
      return schoolResponses[Math.floor(Math.random() * schoolResponses.length)];
    }
    
    // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    if (message.includes('—Ö–æ—Ä–æ—à–æ') || message.includes('–æ—Ç–ª–∏—á–Ω–æ') || message.includes('—Ä–∞–¥–æ—Å—Ç–Ω–æ') || message.includes('—Å—á–∞—Å—Ç–ª–∏–≤')) {
      const positiveResponses = [
        "–≠—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –†–∞–¥ —Å–ª—ã—à–∞—Ç—å, —á—Ç–æ —É –≤–∞—Å –≤—Å–µ —Ö–æ—Ä–æ—à–æ. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç –≤–∞–º —Ä–∞–¥–æ—Å—Ç—å?",
        "–û—Ç–ª–∏—á–Ω–æ! –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏ - —ç—Ç–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ —Ü–µ–Ω–∏—Ç—å. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –¥–µ–ª–∞–µ—Ç –≤–∞—Å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º?",
        "–ó–¥–æ—Ä–æ–≤–æ! –•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ - —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å, —á—Ç–æ —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏?",
        "–≠—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ! –†–∞–¥, —á—Ç–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è —Ö–æ—Ä–æ—à–æ. –ß—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤–∞–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–∞–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?"
      ];
      return positiveResponses[Math.floor(Math.random() * positiveResponses.length)];
    }
    
    // –û–±—â–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –æ—Ç–≤–µ—Ç—ã
    const generalResponses = [
      "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?",
      "–í–∞—à–∏ —á—É–≤—Å—Ç–≤–∞ –≤–∞–∂–Ω—ã, –∏ —è –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏?",
      "–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤–∞–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç—Ä—É–¥–Ω–æ. –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –≤–º–µ—Å—Ç–µ. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å —Ç—Ä–µ–≤–æ–∂–∏—Ç?",
      "–Ø –≥–æ—Ç–æ–≤ –≤—ã—Å–ª—É—à–∞—Ç—å –≤–∞—Å –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ç–µ–º, —á—Ç–æ —É –≤–∞—Å –Ω–∞ –¥—É—à–µ?",
      "–ö–∞–∂–¥—ã–π –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?",
      "–í–∞—à–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è –≤–∞–∂–Ω—ã. –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –∏ –Ω–∞–π–¥–µ–º —Å–ø–æ—Å–æ–±—ã —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Å–∏—Ç—É–∞—Ü–∏–µ–π.",
      "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–≤–æ–∏—Ö —á—É–≤—Å—Ç–≤–∞—Ö. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?",
      "–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ –∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç —Ç—Ä—É–¥–Ω–æ. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –∏ –º—ã –≤–º–µ—Å—Ç–µ –Ω–∞–π–¥–µ–º —Ä–µ—à–µ–Ω–∏–µ."
    ];
    
    return generalResponses[Math.floor(Math.random() * generalResponses.length)];
  };

  const handleSaveDiary = () => {
    if (!diaryEntry.trim()) return;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫
    const diaryData = {
      id: Date.now(),
      text: diaryEntry,
      date: new Date(),
      mood: currentMood
    };

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage –∏–ª–∏ API
    console.log("Diary entry saved:", diaryData);
    setDiaryEntry("");
    setDiaryOpen(false);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    alert("–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –¥–Ω–µ–≤–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!");
  };

  const handleStartRelaxation = (type: string) => {
    setCurrentRelaxation(type);
    setRelaxationOpen(true);
  };

  const handleGetRecommendations = () => {
    const newRecommendations = [
      "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É 4-7-8 –¥—ã—Ö–∞–Ω–∏—è: –≤–¥–æ—Ö –Ω–∞ 4 —Å—á–µ—Ç–∞, –∑–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 7, –≤—ã–¥–æ—Ö –Ω–∞ 8",
      "–°–ª—É—à–∞–π—Ç–µ —Å–ø–æ–∫–æ–π–Ω—É—é –º—É–∑—ã–∫—É 10-15 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å",
      "–í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ - –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ 3 —Ö–æ—Ä–æ—à–∏–µ –≤–µ—â–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å",
      "–î–µ–ª–∞–π—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ",
      "–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –º–µ–¥–∏—Ç–∞—Ü–∏—é –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ 5-10 –º–∏–Ω—É—Ç"
    ];

    setRecommendations(newRecommendations);
    alert("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
  };

  const handleActivityToggle = (index: number) => {
    const updatedActivities = activities.map((activity, i) =>
      i === index ? { ...activity, completed: !activity.completed } : activity
    );
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ activities
  };

  return (
    <section className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl md:text-3xl font-display font-bold">AI‚Äë–ø—Å–∏—Ö–æ–ª–æ–≥</h1>
          <p className="text-muted-foreground mt-1">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è</p>
        </div>
        <Dialog open={chatOpen} onOpenChange={setChatOpen}>
          <DialogTrigger asChild>
            <Button variant="outline" className="flex items-center gap-2">
              <MessageSquare className="w-4 h-4" />
              –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º
            </Button>
          </DialogTrigger>
          <DialogContent className="max-w-2xl max-h-[80vh]">
            <DialogHeader>
              <DialogTitle>–ß–∞—Ç —Å AI-–ø—Å–∏—Ö–æ–ª–æ–≥–æ–º</DialogTitle>
            </DialogHeader>
            <div className="space-y-4">
              <div className="h-96 overflow-y-auto border rounded-lg p-4 space-y-3">
                {chatMessages.map((message) => (
                  <div key={message.id} className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
                    <div className={`max-w-[80%] p-3 rounded-lg ${message.sender === 'user'
                        ? 'bg-blue-600 text-white'
                        : 'bg-gray-100 text-gray-900'
                      }`}>
                      <p className="text-sm">{message.text}</p>
                      <p className="text-xs opacity-70 mt-1">
                        {message.timestamp.toLocaleTimeString()}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
              <div className="flex gap-2">
                <Textarea
                  value={newMessage}
                  onChange={(e) => setNewMessage(e.target.value)}
                  placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                  className="flex-1"
                  onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && (e.preventDefault(), handleSendMessage())}
                />
                <Button onClick={handleSendMessage} disabled={!newMessage.trim()}>
                  <Send className="w-4 h-4" />
                </Button>
              </div>
            </div>
          </DialogContent>
        </Dialog>
      </div>

      {/* Current Mood */}
      <div className="grid md:grid-cols-2 gap-6">
        <div className="p-6 rounded-xl border bg-gradient-to-br from-blue-50 to-blue-100">
          <h3 className="font-semibold mb-4 flex items-center gap-2">
            <Heart className="w-4 h-4 text-blue-600" />
            –ö–∞–∫ –≤—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–≥–æ–¥–Ω—è?
          </h3>
          <div className="grid grid-cols-3 gap-3">
            {["happy", "neutral", "sad"].map((mood) => (
              <Button
                key={mood}
                variant={currentMood === mood ? "default" : "outline"}
                onClick={() => handleMoodChange(mood)}
                className={`flex flex-col items-center gap-2 p-4 h-auto transition-all ${currentMood === mood ? "bg-blue-600 hover:bg-blue-700 scale-105" : "hover:scale-105"
                  }`}
              >
                <span className="text-2xl">{getMoodIcon(mood)}</span>
                <span className="text-xs">
                  {mood === "happy" ? "–•–æ—Ä–æ—à–æ" : mood === "neutral" ? "–ù–æ—Ä–º–∞–ª—å–Ω–æ" : "–ü–ª–æ—Ö–æ"}
                </span>
              </Button>
            ))}
          </div>
        </div>

        <div className="p-6 rounded-xl border bg-gradient-to-br from-green-50 to-green-100">
          <h3 className="font-semibold mb-4 flex items-center gap-2">
            <TrendingUp className="w-4 h-4 text-green-600" />
            –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é
          </h3>
          <div className="space-y-3">
            {moodHistory.map((day, index) => (
              <div key={index} className="flex items-center gap-3">
                <span className="text-sm font-medium w-8">{day.date}</span>
                <div className="flex-1">
                  <Progress value={day.value * 10} className="h-2" />
                </div>
                <span className={`text-lg ${getMoodColor(day.mood)}`}>
                  {getMoodIcon(day.mood)}
                </span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Daily Activities */}
      <div className="p-6 rounded-xl border bg-card">
        <h3 className="font-semibold mb-4 flex items-center gap-2">
          <Activity className="w-4 h-4 text-purple-600" />
          –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        </h3>
        <div className="grid md:grid-cols-2 gap-4">
          {activities.map((activity, index) => (
            <div key={index} className="flex items-center gap-3 p-4 rounded-lg border bg-white/50">
              <div className="text-2xl">{activity.icon}</div>
              <div className="flex-1">
                <h4 className="font-medium">{activity.name}</h4>
                <p className="text-sm text-muted-foreground">{activity.duration}</p>
              </div>
              <Button
                size="sm"
                variant={activity.completed ? "outline" : "default"}
                className={activity.completed ? "text-green-600 border-green-200" : ""}
                onClick={() => handleActivityToggle(index)}
              >
                {activity.completed ? "‚úì –í—ã–ø–æ–ª–Ω–µ–Ω–æ" : "–ù–∞—á–∞—Ç—å"}
              </Button>
            </div>
          ))}
        </div>
      </div>

      {/* Wellness Stats */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div className="p-4 rounded-xl border bg-card">
          <div className="flex items-center gap-3">
            <div className="p-2 rounded-lg bg-green-100 text-green-600">
              <Smile className="w-5 h-5" />
            </div>
            <div>
              <p className="text-sm text-muted-foreground">–°—Ä–µ–¥–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</p>
              <p className="text-xl font-bold">7.2/10</p>
            </div>
          </div>
        </div>
        <div className="p-4 rounded-xl border bg-card">
          <div className="flex items-center gap-3">
            <div className="p-2 rounded-lg bg-blue-100 text-blue-600">
              <Brain className="w-5 h-5" />
            </div>
            <div>
              <p className="text-sm text-muted-foreground">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</p>
              <p className="text-xl font-bold">12</p>
            </div>
          </div>
        </div>
        <div className="p-4 rounded-xl border bg-card">
          <div className="flex items-center gap-3">
            <div className="p-2 rounded-lg bg-purple-100 text-purple-600">
              <Target className="w-5 h-5" />
            </div>
            <div>
              <p className="text-sm text-muted-foreground">–¶–µ–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</p>
              <p className="text-xl font-bold">8/10</p>
            </div>
          </div>
        </div>
        <div className="p-4 rounded-xl border bg-card">
          <div className="flex items-center gap-3">
            <div className="p-2 rounded-lg bg-orange-100 text-orange-600">
              <Calendar className="w-5 h-5" />
            </div>
            <div>
              <p className="text-sm text-muted-foreground">–°–µ—Å—Å–∏–π —Å –ò–ò</p>
              <p className="text-xl font-bold">5</p>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="grid md:grid-cols-3 gap-4">
        <div className="p-6 rounded-xl border bg-gradient-to-br from-pink-50 to-pink-100">
          <h3 className="font-semibold mb-4 flex items-center gap-2">
            <MessageSquare className="w-4 h-4 text-pink-600" />
            –î–Ω–µ–≤–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
          </h3>
          <p className="text-sm text-muted-foreground mb-4">
            –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏ –∏ —ç–º–æ—Ü–∏–∏
          </p>
          <Dialog open={diaryOpen} onOpenChange={setDiaryOpen}>
            <DialogTrigger asChild>
              <Button size="sm" className="bg-pink-600 hover:bg-pink-700">
                –ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–ø–∏—Å—å
              </Button>
            </DialogTrigger>
            <DialogContent>
              <DialogHeader>
                <DialogTitle>–î–Ω–µ–≤–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</DialogTitle>
              </DialogHeader>
              <div className="space-y-4">
                <div>
                  <label className="text-sm font-medium">–í–∞—à–µ —Ç–µ–∫—É—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</label>
                  <div className="flex gap-2 mt-2">
                    {["happy", "neutral", "sad"].map((mood) => (
                      <Button
                        key={mood}
                        variant={currentMood === mood ? "default" : "outline"}
                        size="sm"
                        onClick={() => setCurrentMood(mood)}
                        className="flex items-center gap-1"
                      >
                        <span>{getMoodIcon(mood)}</span>
                        <span className="text-xs">
                          {mood === "happy" ? "–•–æ—Ä–æ—à–æ" : mood === "neutral" ? "–ù–æ—Ä–º–∞–ª—å–Ω–æ" : "–ü–ª–æ—Ö–æ"}
                        </span>
                      </Button>
                    ))}
                  </div>
                </div>
                <div>
                  <label className="text-sm font-medium">–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –º—ã—Å–ª–∏ –∏ —á—É–≤—Å—Ç–≤–∞:</label>
                  <Textarea
                    value={diaryEntry}
                    onChange={(e) => setDiaryEntry(e.target.value)}
                    placeholder="–ö–∞–∫ –ø—Ä–æ—à–µ–ª –≤–∞—à –¥–µ–Ω—å? –ß—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç –∏–ª–∏ —Ä–∞–¥—É–µ—Ç?"
                    className="mt-2"
                    rows={4}
                  />
                </div>
                <div className="flex justify-end gap-2">
                  <Button variant="outline" onClick={() => setDiaryOpen(false)}>
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                  <Button onClick={handleSaveDiary} disabled={!diaryEntry.trim()}>
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å
                  </Button>
                </div>
              </div>
            </DialogContent>
          </Dialog>
        </div>

        <div className="p-6 rounded-xl border bg-gradient-to-br from-indigo-50 to-indigo-100">
          <h3 className="font-semibold mb-4 flex items-center gap-2">
            <BookOpen className="w-4 h-4 text-indigo-600" />
            –¢–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏
          </h3>
          <p className="text-sm text-muted-foreground mb-4">
            –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞
          </p>
          <Dialog open={relaxationOpen} onOpenChange={setRelaxationOpen}>
            <DialogTrigger asChild>
              <Button size="sm" className="bg-indigo-600 hover:bg-indigo-700">
                –ù–∞—á–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
              </Button>
            </DialogTrigger>
            <DialogContent>
              <DialogHeader>
                <DialogTitle>–¢–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏</DialogTitle>
              </DialogHeader>
              <div className="space-y-4">
                <div className="grid gap-3">
                  <Button
                    variant="outline"
                    className="justify-start h-auto p-4"
                    onClick={() => handleStartRelaxation('breathing')}
                  >
                    <div className="text-left">
                      <div className="font-medium">–î—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 4-7-8</div>
                      <div className="text-sm text-muted-foreground">–í–¥–æ—Ö –Ω–∞ 4, –∑–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 7, –≤—ã–¥–æ—Ö –Ω–∞ 8</div>
                    </div>
                  </Button>
                  <Button
                    variant="outline"
                    className="justify-start h-auto p-4"
                    onClick={() => handleStartRelaxation('meditation')}
                  >
                    <div className="text-left">
                      <div className="font-medium">–ú–µ–¥–∏—Ç–∞—Ü–∏—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏</div>
                      <div className="text-sm text-muted-foreground">5-10 –º–∏–Ω—É—Ç —Ñ–æ–∫—É—Å–∞ –Ω–∞ –¥—ã—Ö–∞–Ω–∏–∏</div>
                    </div>
                  </Button>
                  <Button
                    variant="outline"
                    className="justify-start h-auto p-4"
                    onClick={() => handleStartRelaxation('progressive')}
                  >
                    <div className="text-left">
                      <div className="font-medium">–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è</div>
                      <div className="text-sm text-muted-foreground">–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –º—ã—à—Ü</div>
                    </div>
                  </Button>
                </div>
                {currentRelaxation && (
                  <div className="p-4 bg-blue-50 rounded-lg">
                    <h4 className="font-medium mb-2">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h4>
                    <p className="text-sm text-muted-foreground">
                      {currentRelaxation === 'breathing' && "–°—è–¥—å—Ç–µ —É–¥–æ–±–Ω–æ, –∑–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞. –í–¥–æ—Ö–Ω–∏—Ç–µ –Ω–∞ 4 —Å—á–µ—Ç–∞, –∑–∞–¥–µ—Ä–∂–∏—Ç–µ –¥—ã—Ö–∞–Ω–∏–µ –Ω–∞ 7 —Å—á–µ—Ç–æ–≤, –≤—ã–¥–æ—Ö–Ω–∏—Ç–µ –Ω–∞ 8 —Å—á–µ—Ç–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 4-5 —Ä–∞–∑."}
                      {currentRelaxation === 'meditation' && "–°—è–¥—å—Ç–µ –≤ —É–¥–æ–±–Ω–æ–π –ø–æ–∑–µ, –∑–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Å–≤–æ–µ–º –¥—ã—Ö–∞–Ω–∏–∏. –ö–æ–≥–¥–∞ –º—ã—Å–ª–∏ –æ—Ç–≤–ª–µ–∫–∞—é—Ç, –º—è–≥–∫–æ –≤–µ—Ä–Ω–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥—ã—Ö–∞–Ω–∏—é."}
                      {currentRelaxation === 'progressive' && "–ù–∞—á–Ω–∏—Ç–µ —Å –ø–∞–ª—å—Ü–µ–≤ –Ω–æ–≥, –Ω–∞–ø—Ä—è–≥–∏—Ç–µ –∏—Ö –Ω–∞ 5 —Å–µ–∫—É–Ω–¥, –∑–∞—Ç–µ–º —Ä–∞—Å—Å–ª–∞–±—å—Ç–µ. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ –∏–∫—Ä–∞–º, –±–µ–¥—Ä–∞–º, –∂–∏–≤–æ—Ç—É, —Ä—É–∫–∞–º, –ø–ª–µ—á–∞–º, –ª–∏—Ü—É."}
                    </p>
                  </div>
                )}
              </div>
            </DialogContent>
          </Dialog>
        </div>

        <div className="p-6 rounded-xl border bg-gradient-to-br from-teal-50 to-teal-100">
          <h3 className="font-semibold mb-4 flex items-center gap-2">
            <Heart className="w-4 h-4 text-teal-600" />
            –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
          </h3>
          <p className="text-sm text-muted-foreground mb-4">
            –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –ò–ò
          </p>
          <Button size="sm" className="bg-teal-600 hover:bg-teal-700" onClick={handleGetRecommendations}>
            –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç
          </Button>
        </div>
      </div>

      {/* Recent Insights */}
      <div className="p-6 rounded-xl border bg-card">
        <h3 className="font-semibold mb-4 flex items-center gap-2">
          <Brain className="w-4 h-4 text-blue-600" />
          –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–Ω—Å–∞–π—Ç—ã
        </h3>
        <div className="space-y-3">
          <div className="p-3 rounded-lg bg-blue-50 border border-blue-200">
            <p className="text-sm">
              <span className="font-semibold">–ó–∞–º–µ—Ç–∫–∞:</span> –í—ã –ª—É—á—à–µ –≤—Å–µ–≥–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –ø–æ—Å–ª–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å 15 –º–∏–Ω—É—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –≤ –¥–µ–Ω—å.
            </p>
          </div>
          <div className="p-3 rounded-lg bg-green-50 border border-green-200">
            <p className="text-sm">
              <span className="font-semibold">–ü—Ä–æ–≥—Ä–µ—Å—Å:</span> –í–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —É–ª—É—á—à–∏–ª–æ—Å—å –Ω–∞ 20% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é.
              –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏.
            </p>
          </div>
        </div>
      </div>
    </section>
  );
};

export default StudentAIPsychologist;
